{"ast":null,"code":"var _jsxFileName = \"D:\\\\React-Pro\\\\filter\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Form from './Form';\nimport List from './List';\nimport { nanoid } from 'nanoid';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  // const Array = [\n  //   // {id:nanoid(),thing:'Banana'}\n  // ]\n  const [data, setdata] = useState([]);\n  const [inp, setinp] = useState('');\n  const [toggle, settoggle] = useState(true);\n  const [edit, setedit] = useState(null);\n  useEffect(() => {\n    const fetched = JSON.parse(localStorage.getItem('todo'));\n    setdata(fetched);\n  }, []);\n\n  const additem = inp => {\n    if (inp && !toggle) {\n      setdata(data.map(elem => {\n        if (elem.id === edit) {\n          return { ...elem,\n            thing: inp\n          };\n        }\n\n        return elem;\n      }));\n      settoggle(true);\n      setinp('');\n      setedit(null);\n    } else {\n      const newitem = {\n        id: nanoid(),\n        thing: inp\n      };\n      const newthing = [...data, newitem];\n      localStorage.setItem('todo', JSON.stringify(newthing));\n      setdata(newthing);\n    }\n  };\n\n  const removeitem = id => {\n    let del_item = JSON.parse(localStorage.getItem('todo'));\n    del_item = del_item.filter(del => del.id !== id);\n    localStorage.setItem('todo', JSON.stringify(del_item));\n    setdata(del_item);\n  };\n\n  const edititem = id => {\n    let edit_item = data.find(item => {\n      return item.id === id;\n    });\n    console.log(edit_item);\n    settoggle(false);\n    setinp(edit_item.thing);\n    setedit(id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      additem: additem,\n      inp: inp,\n      setinp: setinp,\n      toggle: toggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), data.map(elem => {\n      return /*#__PURE__*/_jsxDEV(List, {\n        items: elem,\n        removeitem: removeitem,\n        edititem: edititem\n      }, elem.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 18\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"OUpDadyiWTRLhUCp2KqysQIGdvU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/React-Pro/filter/src/App.js"],"names":["React","useState","useEffect","Form","List","nanoid","ToastContainer","toast","App","data","setdata","inp","setinp","toggle","settoggle","edit","setedit","fetched","JSON","parse","localStorage","getItem","additem","map","elem","id","thing","newitem","newthing","setItem","stringify","removeitem","del_item","filter","del","edititem","edit_item","find","item","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport Form from './Form'\r\nimport List from './List'\r\nimport { nanoid } from 'nanoid'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\nconst App = () => {\r\n\r\n  // const Array = [\r\n  //   // {id:nanoid(),thing:'Banana'}\r\n  // ]\r\n\r\n  const [data, setdata] = useState([])\r\n  const [inp, setinp] = useState('')\r\n  const [toggle, settoggle] = useState(true)\r\n  const [edit, setedit] = useState(null)\r\n\r\n\r\n  useEffect(() => {\r\n    const fetched = JSON.parse(localStorage.getItem('todo'))\r\n    setdata(fetched)\r\n\r\n  }, [])\r\n\r\n\r\n  const additem = (inp) => {\r\n\r\n    if (inp && !toggle) {\r\n      setdata(\r\n        data.map((elem) => {\r\n          if (elem.id === edit) {\r\n            return { ...elem, thing: inp }\r\n          }\r\n          return elem\r\n        })\r\n      )\r\n      settoggle(true)\r\n      setinp('')\r\n      setedit(null)\r\n    }\r\n    else {\r\n      const newitem = {id:nanoid(),thing:inp}\r\n      const newthing = [...data,newitem]\r\n      localStorage.setItem('todo',JSON.stringify(newthing))\r\n      setdata(newthing)\r\n    }\r\n  }\r\n\r\n  const removeitem = (id) => {\r\n    let del_item = JSON.parse(localStorage.getItem('todo'))\r\n    del_item = del_item.filter((del) => del.id !== id)\r\n    localStorage.setItem('todo', JSON.stringify(del_item))\r\n    setdata(del_item)\r\n  }\r\n\r\n  const edititem = (id) => {\r\n    let edit_item = data.find((item) => { return item.id === id })\r\n    console.log(edit_item);\r\n    settoggle(false)\r\n    setinp(edit_item.thing)\r\n    setedit(id)\r\n  }\r\n\r\n\r\n  return (\r\n    <div className='app'>\r\n      <ToastContainer />\r\n      <Form\r\n        additem={additem}\r\n        inp={inp}\r\n        setinp={setinp}\r\n        toggle={toggle}\r\n      />\r\n\r\n      {\r\n        data.map((elem) => {\r\n          return <List\r\n            key={elem.id}\r\n            items={elem}\r\n            removeitem={removeitem}\r\n            edititem={edititem}\r\n          />\r\n        })\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App"]},"metadata":{},"sourceType":"module"}