{"ast":null,"code":"var _jsxFileName = \"D:\\\\React-Pro\\\\filter\\\\src\\\\Reducer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst newObject = [{\n  id: Date.now(),\n  email: 'asad@gmail.com',\n  password: 123\n}];\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'add':\n      return [...state, action.payload];\n\n    default:\n      throw new Error();\n  }\n};\n\nconst Reducer = () => {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, newObject);\n  const [inp, setinp] = useState({\n    email: '',\n    pwd: ''\n  });\n\n  const handle_input = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setinp({ ...inp,\n      [name]: value\n    });\n  };\n\n  const Submit = e => {\n    e.preventDefault();\n    setinp({\n      email: '',\n      pwd: ''\n    });\n    const contact = {\n      id: Date.now(),\n      email: inp.email,\n      password: inp.pwd\n    };\n    dispatch({\n      type: 'add',\n      payload: contact\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      onSubmit: Submit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"inp_css\",\n        onChange: handle_input,\n        name: \"email\",\n        value: inp.email,\n        type: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"inp_css\",\n        name: \"pwd\",\n        onChange: handle_input,\n        value: inp.pwd,\n        type: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        className: \"btn_css\",\n        value: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), state.map(elem => {\n      return /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\" \", elem.email + \" - - - - \" + elem.password, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \" delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 90\n        }, this), \"  \"]\n      }, elem.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 28\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Reducer, \"aFqnAkfBnuv51zEkDIzKP/Li714=\");\n\n_c = Reducer;\nexport default Reducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reducer\");","map":{"version":3,"sources":["D:/React-Pro/filter/src/Reducer.jsx"],"names":["React","useReducer","useState","newObject","id","Date","now","email","password","reducer","state","action","type","payload","Error","Reducer","dispatch","inp","setinp","pwd","handle_input","e","name","value","target","Submit","preventDefault","contact","map","elem"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react'\r\nimport { useState } from 'react'\r\n\r\nconst newObject = [{\r\n    id: Date.now(),\r\n    email: 'asad@gmail.com',\r\n    password: 123,\r\n}]\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'add': return [...state, action.payload]\r\n\r\n\r\n        default:\r\n            throw new Error()\r\n    }\r\n}\r\n\r\nconst Reducer = () => {\r\n\r\n    const [state, dispatch] = useReducer(reducer, newObject)\r\n\r\n    const [inp, setinp] = useState({ email: '', pwd: '' })\r\n\r\n\r\n\r\n\r\n    const handle_input = e => {\r\n        const { name, value } = e.target\r\n        setinp({ ...inp, [name]: value })\r\n    }\r\n\r\n\r\n    const Submit = e => {\r\n        e.preventDefault()\r\n        setinp({ email: '', pwd: '' })\r\n        const contact = {\r\n            id: Date.now(),\r\n            email: inp.email,\r\n            password: inp.pwd\r\n        }\r\n\r\n        dispatch({ type: 'add', payload: contact })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form action=\"\" onSubmit={Submit}>\r\n                < input\r\n                    className='inp_css'\r\n                    onChange={handle_input}\r\n                    name='email'\r\n                    value={inp.email}\r\n                    type=\"email\" />\r\n                < input\r\n                    className='inp_css'\r\n                    name='pwd'\r\n                    onChange={handle_input}\r\n                    value={inp.pwd}\r\n                    type=\"password\" />\r\n                <input type=\"submit\" className='btn_css' value=\"Submit\" />\r\n\r\n            </form>\r\n\r\n            {\r\n                state.map(elem => {\r\n                    return <h2 key={elem.id}> {elem.email + \" - - - - \" + elem.password} <button > delete</button>  </h2>\r\n\r\n                })\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Reducer"]},"metadata":{},"sourceType":"module"}