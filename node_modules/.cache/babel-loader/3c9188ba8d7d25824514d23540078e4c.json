{"ast":null,"code":"var _jsxFileName = \"D:\\\\React-Pro\\\\filter\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport { type } from '@testing-library/user-event/dist/type';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'increment':\n      return { ...state,\n        count: state.count + 1\n      };\n\n    case 'decrement':\n      return state.count > 1 ? { ...state,\n        count: state.count - 1\n      } : { ...state,\n        count: state.count = 0\n      };\n\n    case 'userInput':\n      return { ...state,\n        input: action.target\n      };\n\n    case 'mode_toggle':\n      return { ...state,\n        mode: !state.mode\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst App = () => {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, {\n    count: 0,\n    input: '',\n    mode: false\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `app`,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: state.count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"inp_css\",\n      placeholder: \"Enter name\",\n      value: state.input,\n      type: \"text\",\n      onChange: e => dispatch({\n        type: 'userInput'\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn_css\",\n      onClick: () => dispatch({\n        type: 'increment'\n      }),\n      children: \"Increase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn_css\",\n      onClick: () => dispatch({\n        type: 'decrement'\n      }),\n      children: \"Decrease\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn_css\",\n      onClick: () => dispatch({\n        type: 'mode_toggle'\n      }),\n      children: \"Change Mode\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"qT0/EbLZhVEbvnuYHKr3Fwo2To8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/React-Pro/filter/src/App.js"],"names":["React","useReducer","type","reducer","state","action","count","input","target","mode","App","dispatch","e"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,IAAT,QAAqB,uCAArB;;;AAGA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,UAAQA,MAAM,CAACH,IAAf;AACE,SAAK,WAAL;AAAkB,aAAO,EAAC,GAAGE,KAAJ;AAAWE,QAAAA,KAAK,EAAEF,KAAK,CAACE,KAAN,GAAc;AAAhC,OAAP;;AAClB,SAAK,WAAL;AAAkB,aAAOF,KAAK,CAACE,KAAN,GAAc,CAAd,GAAkB,EAAC,GAAGF,KAAJ;AAAWE,QAAAA,KAAK,EAAEF,KAAK,CAACE,KAAN,GAAc;AAAhC,OAAlB,GAAwD,EAAC,GAAGF,KAAJ;AAAWE,QAAAA,KAAK,EAAEF,KAAK,CAACE,KAAN,GAAc;AAAhC,OAA/D;;AAClB,SAAK,WAAL;AAAmB,aAAO,EAAC,GAAGF,KAAJ;AAAUG,QAAAA,KAAK,EAACF,MAAM,CAACG;AAAvB,OAAP;;AACnB,SAAK,aAAL;AAAoB,aAAO,EAAE,GAAGJ,KAAL;AAAYK,QAAAA,IAAI,EAAE,CAAEL,KAAK,CAACK;AAA1B,OAAP;;AAEpB;AAAS,aAAOL,KAAP;AANX;AASD,CAVD;;AAaA,MAAMM,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAM,CAACN,KAAD,EAAQO,QAAR,IAAoBV,UAAU,CAACE,OAAD,EAAU;AAAEG,IAAAA,KAAK,EAAE,CAAT;AAAYC,IAAAA,KAAK,EAAE,EAAnB;AAAuBE,IAAAA,IAAI,EAAE;AAA7B,GAAV,CAApC;AAGA,sBACE;AAAK,IAAA,SAAS,EAAG,KAAjB;AAAA,4BAEE;AAAA,gBAAKL,KAAK,CAACE;AAAX;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAO,MAAA,SAAS,EAAC,SAAjB;AAA2B,MAAA,WAAW,EAAC,YAAvC;AAAoD,MAAA,KAAK,EAAEF,KAAK,CAACG,KAAjE;AAAwE,MAAA,IAAI,EAAC,MAA7E;AACC,MAAA,QAAQ,EAAGK,CAAD,IAAKD,QAAQ,CAAC;AAACT,QAAAA,IAAI,EAAC;AAAN,OAAD;AADxB;AAAA;AAAA;AAAA;AAAA,YAHF,eAKE;AAAQ,MAAA,SAAS,EAAC,SAAlB;AAA4B,MAAA,OAAO,EAAE,MAAMS,QAAQ,CAAC;AAAET,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAQ,MAAA,SAAS,EAAC,SAAlB;AAA4B,MAAA,OAAO,EAAE,MAAMS,QAAQ,CAAC;AAAET,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAOE;AAAQ,MAAA,SAAS,EAAC,SAAlB;AAA4B,MAAA,OAAO,EAAE,MAAMS,QAAQ,CAAC;AAAET,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAjBD;;GAAMQ,G;;KAAAA,G;AAmBN,eAAeA,GAAf","sourcesContent":["import React, { useReducer } from 'react'\r\nimport { type } from '@testing-library/user-event/dist/type';\r\n\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'increment': return {...state, count: state.count + 1 }\r\n    case 'decrement': return state.count > 1 ? {...state, count: state.count - 1 } : {...state, count: state.count = 0 }\r\n    case 'userInput' : return {...state,input:action.target }\r\n    case 'mode_toggle': return { ...state, mode: ! state.mode}\r\n\r\n    default: return state\r\n\r\n  }\r\n}\r\n\r\n\r\nconst App = () => {\r\n\r\n  const [state, dispatch] = useReducer(reducer, { count: 0, input: '', mode: false })\r\n\r\n\r\n  return (\r\n    <div className={`app`}>\r\n\r\n      <h1>{state.count}</h1>\r\n      <input className='inp_css' placeholder='Enter name' value={state.input} type='text'\r\n       onChange={(e)=>dispatch({type:'userInput', })} />\r\n      <button className='btn_css' onClick={() => dispatch({ type: 'increment' })} >Increase</button>\r\n      <button className='btn_css' onClick={() => dispatch({ type: 'decrement' })} >Decrease</button>\r\n      <button className='btn_css' onClick={() => dispatch({ type: 'mode_toggle' })} >Change Mode</button>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App"]},"metadata":{},"sourceType":"module"}