{"ast":null,"code":"var _jsxFileName = \"D:\\\\React-Pro\\\\filter\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Form from './Form';\nimport List from './List';\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  // const Array = [\n  //   // {id:nanoid(),thing:'Banana'}\n  // ]\n  const [data, setdata] = useState([]);\n  useEffect(() => {\n    const fetched = JSON.parse(localStorage.getItem('todo'));\n    setdata(fetched);\n  }, []);\n\n  const additem = inp => {\n    const newitem = {\n      id: nanoid(),\n      thing: inp\n    };\n    const newthing = [...data, newitem];\n    localStorage.setItem('todo', JSON.stringify(newthing));\n    setdata(newthing);\n  };\n\n  const removeitem = id => {\n    let del_item = JSON.parse(localStorage.getItem('todo'));\n    del_item = del_item.filter(del => del.id !== id);\n    localStorage.setItem('todo', JSON.stringify(del_item));\n    setdata(del_item);\n  };\n\n  const edititem = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      additem: additem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), data.map(elem => {\n      return /*#__PURE__*/_jsxDEV(List, {\n        items: elem,\n        removeitem: removeitem,\n        edititem: edititem\n      }, elem.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 24\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"qLEflTOmXrzTZJfh2c5W/ZOvfY8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/React-Pro/filter/src/App.js"],"names":["React","useState","useEffect","Form","List","nanoid","App","data","setdata","fetched","JSON","parse","localStorage","getItem","additem","inp","newitem","id","thing","newthing","setItem","stringify","removeitem","del_item","filter","del","edititem","map","elem"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,MAAT,QAAuB,QAAvB;;;AACA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAElB;AACA;AACA;AAEE,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMO,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAhB;AACDL,IAAAA,OAAO,CAACC,OAAD,CAAP;AAEC,GAJQ,EAIN,EAJM,CAAT;;AAOA,QAAMK,OAAO,GAAIC,GAAD,IAAS;AACvB,UAAMC,OAAO,GAAG;AAACC,MAAAA,EAAE,EAACZ,MAAM,EAAV;AAAaa,MAAAA,KAAK,EAACH;AAAnB,KAAhB;AACA,UAAMI,QAAQ,GAAG,CAAC,GAAGZ,IAAJ,EAASS,OAAT,CAAjB;AACAJ,IAAAA,YAAY,CAACQ,OAAb,CAAqB,MAArB,EAA4BV,IAAI,CAACW,SAAL,CAAeF,QAAf,CAA5B;AACAX,IAAAA,OAAO,CAACW,QAAD,CAAP;AACD,GALD;;AAOA,QAAMG,UAAU,GAAIL,EAAD,IAAQ;AACzB,QAAIM,QAAQ,GAAGb,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAf;AACCU,IAAAA,QAAQ,GAAGA,QAAQ,CAACC,MAAT,CAAiBC,GAAD,IAAQA,GAAG,CAACR,EAAJ,KAAWA,EAAnC,CAAX;AACAL,IAAAA,YAAY,CAACQ,OAAb,CAAqB,MAArB,EAA4BV,IAAI,CAACW,SAAL,CAAeE,QAAf,CAA5B;AACAf,IAAAA,OAAO,CAACe,QAAD,CAAP;AACF,GALD;;AAOA,QAAMG,QAAQ,GAAG,MAAM,CAEtB,CAFD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,IAAD;AAAO,MAAA,OAAO,EAAEZ;AAAhB;AAAA;AAAA;AAAA;AAAA,YADF,EAISP,IAAI,CAACoB,GAAL,CAAUC,IAAD,IAAQ;AAChB,0BAAS,QAAC,IAAD;AAET,QAAA,KAAK,EAAEA,IAFE;AAGT,QAAA,UAAU,EAAEN,UAHH;AAIT,QAAA,QAAQ,EAAEI;AAJD,SACJE,IAAI,CAACX,EADD;AAAA;AAAA;AAAA;AAAA,cAAT;AAMA,KAPD,CAJT;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAlDD;;GAAMX,G;;KAAAA,G;AAoDN,eAAeA,GAAf","sourcesContent":["import React,{useState,useEffect} from 'react'\r\nimport Form from './Form'\r\nimport List from './List'\r\nimport { nanoid } from 'nanoid'\r\nconst App = () => {\r\n\r\n// const Array = [\r\n//   // {id:nanoid(),thing:'Banana'}\r\n// ]\r\n\r\n  const [data, setdata] = useState([])\r\n\r\n  useEffect(() => {\r\n   const fetched = JSON.parse(localStorage.getItem('todo'))  \r\n  setdata(fetched)\r\n  \r\n  }, [])\r\n  \r\n\r\n  const additem = (inp) => {\r\n    const newitem = {id:nanoid(),thing:inp}\r\n    const newthing = [...data,newitem]\r\n    localStorage.setItem('todo',JSON.stringify(newthing))\r\n    setdata(newthing)\r\n  }\r\n\r\n  const removeitem = (id) => {\r\n    let del_item = JSON.parse(localStorage.getItem('todo'))\r\n     del_item = del_item.filter((del)=> del.id !== id )\r\n     localStorage.setItem('todo',JSON.stringify(del_item))\r\n     setdata(del_item)\r\n  }\r\n\r\n  const edititem = () => {\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <div className='app'>\r\n      <Form  additem={additem} />\r\n    \r\n      {\r\n             data.map((elem)=>{\r\n              return   <List \r\n              key={elem.id}\r\n              items={elem}\r\n              removeitem={removeitem}\r\n              edititem={edititem}\r\n              />\r\n             })\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App"]},"metadata":{},"sourceType":"module"}