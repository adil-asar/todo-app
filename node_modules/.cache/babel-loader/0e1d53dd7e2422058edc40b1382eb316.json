{"ast":null,"code":"var _jsxFileName = \"D:\\\\React-Pro\\\\filter\\\\src\\\\Reducer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'handle_inp':\n      return { ...state,\n        email: action.load_email\n      };\n    // case 'handle_inp': return { ...state, pwd: action.load_pwd }\n\n    default:\n      return state;\n  }\n};\n\nconst Reducer = () => {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, {\n    email: '',\n    pwd: ''\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"inp_css\",\n      onChange: e => dispatch({\n        type: 'handle_inp',\n        load_email: e.target.value\n      }),\n      value: state.email,\n      type: \"email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"inp_css\",\n      onChange: e => dispatch({\n        type: 'handle_inp',\n        load_email: e.target.value\n      }),\n      value: state.pwd,\n      type: \"password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\" \", state.email, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\" \", state.pwd, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Reducer, \"AFBpxR1KN8o3YC2DNBn7nLuroKg=\");\n\n_c = Reducer;\nexport default Reducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reducer\");","map":{"version":3,"sources":["D:/React-Pro/filter/src/Reducer.jsx"],"names":["React","useReducer","reducer","state","action","type","email","load_email","Reducer","dispatch","pwd","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/B,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,YAAL;AAAmB,aAAO,EAAE,GAAGF,KAAL;AAAYG,QAAAA,KAAK,EAAEF,MAAM,CAACG;AAA1B,OAAP;AACnB;;AAGA;AAAS,aAAOJ,KAAP;AALb;AAQH,CATD;;AAYA,MAAMK,OAAO,GAAG,MAAM;AAAA;;AAElB,QAAM,CAACL,KAAD,EAAQM,QAAR,IAAoBR,UAAU,CAACC,OAAD,EAAU;AAAEI,IAAAA,KAAK,EAAE,EAAT;AAAaI,IAAAA,GAAG,EAAE;AAAlB,GAAV,CAApC;AAKA,sBACI;AAAA,4BACI;AACI,MAAA,SAAS,EAAC,SADd;AAEI,MAAA,QAAQ,EAAGC,CAAD,IAAOF,QAAQ,CAAC;AAAEJ,QAAAA,IAAI,EAAE,YAAR;AAAsBE,QAAAA,UAAU,EAAEI,CAAC,CAACC,MAAF,CAASC;AAA3C,OAAD,CAF7B;AAGI,MAAA,KAAK,EAAEV,KAAK,CAACG,KAHjB;AAII,MAAA,IAAI,EAAC;AAJT;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI;AACI,MAAA,SAAS,EAAC,SADd;AAEI,MAAA,QAAQ,EAAGK,CAAD,IAAOF,QAAQ,CAAC;AAAEJ,QAAAA,IAAI,EAAE,YAAR;AAAsBE,QAAAA,UAAU,EAAEI,CAAC,CAACC,MAAF,CAASC;AAA3C,OAAD,CAF7B;AAGI,MAAA,KAAK,EAAEV,KAAK,CAACO,GAHjB;AAII,MAAA,IAAI,EAAC;AAJT;AAAA;AAAA;AAAA;AAAA,YANJ,eAWI;AAAA,sBAAMP,KAAK,CAACG,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ,eAYI;AAAA,sBAAMH,KAAK,CAACO,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CAxBD;;GAAMF,O;;KAAAA,O;AA0BN,eAAeA,OAAf","sourcesContent":["import React, { useReducer } from 'react'\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'handle_inp': return { ...state, email: action.load_email }\r\n        // case 'handle_inp': return { ...state, pwd: action.load_pwd }\r\n\r\n\r\n        default: return state\r\n\r\n    }\r\n}\r\n\r\n\r\nconst Reducer = () => {\r\n\r\n    const [state, dispatch] = useReducer(reducer, { email: '', pwd: '' })\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            < input\r\n                className='inp_css'\r\n                onChange={(e) => dispatch({ type: 'handle_inp', load_email: e.target.value })}\r\n                value={state.email}\r\n                type=\"email\" />\r\n            < input\r\n                className='inp_css'\r\n                onChange={(e) => dispatch({ type: 'handle_inp', load_email: e.target.value })}\r\n                value={state.pwd}\r\n                type=\"password\" />\r\n            <h2> {state.email} </h2>\r\n            <h2> {state.pwd} </h2>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Reducer"]},"metadata":{},"sourceType":"module"}