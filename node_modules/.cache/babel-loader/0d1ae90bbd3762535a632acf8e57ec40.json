{"ast":null,"code":"var _jsxFileName = \"D:\\\\React-Pro\\\\filter\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'increment':\n      return count += 1;\n      break;\n\n    default:\n      break;\n  }\n};\n\nconst App = () => {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, {\n    count: 0,\n    input: '',\n    mode: false\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: state.count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn_css\",\n      onClick: () => dispatch({\n        type: 'increment'\n      }),\n      children: \"Increase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn_css\",\n      onClick: () => dispatch({\n        type: 'decrement'\n      }),\n      children: \"Decrease\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"/Lo59QK2FaQxQwMa8ayFVu57jBs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/React-Pro/filter/src/App.js"],"names":["React","useReducer","reducer","state","action","type","count","App","dispatch","input","mode"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,UAAd,QAA+B,OAA/B;;;AAGA,MAAMC,OAAO,GAAG,CAAEC,KAAF,EAASC,MAAT,KAAoB;AACpC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,WAAL;AAAkB,aAAOC,KAAK,IAAE,CAAd;AAEhB;;AAEF;AACE;AANJ;AAQC,CATD;;AAYA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAM,CAACJ,KAAD,EAAQK,QAAR,IAAoBP,UAAU,CAACC,OAAD,EAAU;AAAEI,IAAAA,KAAK,EAAG,CAAV;AAAaG,IAAAA,KAAK,EAAC,EAAnB;AAAuBC,IAAAA,IAAI,EAAC;AAA5B,GAAV,CAApC;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BAEE;AAAA,gBAAKP,KAAK,CAACG;AAAX;AAAA;AAAA;AAAA;AAAA,YAFF,eAIE;AAAQ,MAAA,SAAS,EAAC,SAAlB;AAA4B,MAAA,OAAO,EAAE,MAAIE,QAAQ,CAAC;AAACH,QAAAA,IAAI,EAAC;AAAN,OAAD,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAQ,MAAA,SAAS,EAAC,SAAlB;AAA4B,MAAA,OAAO,EAAE,MAAIG,QAAQ,CAAC;AAACH,QAAAA,IAAI,EAAC;AAAN,OAAD,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAfD;;GAAME,G;;KAAAA,G;AAiBN,eAAeA,GAAf","sourcesContent":["import React,{useReducer} from 'react'\r\n\r\n\r\nconst reducer = ( state, action) => {\r\nswitch (action.type) {\r\n  case 'increment': return count+=1\r\n    \r\n    break;\r\n\r\n  default:\r\n    break;\r\n}\r\n}\r\n\r\n\r\nconst App = () => {\r\n\r\n  const [state, dispatch] = useReducer(reducer, { count : 0, input:'', mode:false}  )\r\n\r\n\r\n  return (\r\n    <div className='app'>\r\n      \r\n      <h1>{state.count}</h1>\r\n\r\n      <button className='btn_css' onClick={()=>dispatch({type:'increment'})} >Increase</button>\r\n      <button className='btn_css' onClick={()=>dispatch({type:'decrement'})} >Decrease</button>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App"]},"metadata":{},"sourceType":"module"}