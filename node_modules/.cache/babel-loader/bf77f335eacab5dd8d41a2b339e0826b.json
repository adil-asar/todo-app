{"ast":null,"code":"var _jsxFileName = \"D:\\\\React-Pro\\\\filter\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst object = {\n  count: 5\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'increase':\n      return {\n        count: state.count = state.count + 1\n      };\n\n    default:\n      return state;\n      break;\n  }\n};\n\nconst App = () => {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, object);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\" \", state.count, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"inp_css\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn_css\",\n      onClick: () => dispatch({\n        type: 'increment'\n      }),\n      children: \" Increment \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn_css\",\n      onClick: () => dispatch({\n        type: 'decrement'\n      }),\n      children: \" Decrement \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn_css\",\n      onClick: () => dispatch({\n        type: 'color'\n      }),\n      children: \" Reset \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"M1GlW2uO218D5I6DyxItE9UJCxw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/React-Pro/filter/src/App.js"],"names":["React","useReducer","object","count","reducer","state","action","type","App","dispatch"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAO,aAAP;;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,KAAK,EAAG;AADK,CAAf;;AAIA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAOC,MAAP,KAAkB;AAEhC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AAAiB,aAAQ;AAACJ,QAAAA,KAAK,EAACE,KAAK,CAACF,KAAN,GAAcE,KAAK,CAACF,KAAN,GAAY;AAAjC,OAAR;;AAOjB;AAAS,aAAOE,KAAP;AACP;AATJ;AAcD,CAhBD;;AAkBA,MAAMG,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAM,CAACH,KAAD,EAAQI,QAAR,IAAoBR,UAAU,CAACG,OAAD,EAAUF,MAAV,CAApC;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BAEG;AAAA,sBAAMG,KAAK,CAACF,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFH,eAIE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,SAAS,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA,YAJF,eAME;AAAQ,MAAA,SAAS,EAAC,SAAlB;AAA4B,MAAA,OAAO,EAAE,MAAMM,QAAQ,CAAC;AAAEF,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAOE;AAAQ,MAAA,SAAS,EAAC,SAAlB;AAA4B,MAAA,OAAO,EAAE,MAAME,QAAQ,CAAC;AAAEF,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE;AAAQ,MAAA,SAAS,EAAC,SAAlB;AAA4B,MAAA,OAAO,EAAE,MAAME,QAAQ,CAAC;AAAEF,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAhBD;;GAAMC,G;;KAAAA,G;AAkBN,eAAeA,GAAf","sourcesContent":["\r\nimport React, { useReducer } from 'react'\r\nimport './index.css'\r\n\r\nconst object = {\r\n  count : 5,\r\n}\r\n\r\nconst reducer = (state,action) => {\r\n\r\n  switch (action.type) {\r\n    case 'increase': return  {count:state.count = state.count+1}\r\n  \r\n      \r\n    \r\n      \r\n    \r\n  \r\n    default: return state\r\n      break;\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\nconst App = () => {\r\n\r\n  const [state, dispatch] = useReducer(reducer, object)\r\n\r\n  return (\r\n    <div className='app'>\r\n \r\n       <h2> {state.count} </h2>\r\n      \r\n      <input type='text' className='inp_css' />\r\n\r\n      <button className='btn_css' onClick={() => dispatch({ type: 'increment' })}  > Increment </button>\r\n      <button className='btn_css' onClick={() => dispatch({ type: 'decrement' })}  > Decrement </button>\r\n      <button className='btn_css' onClick={() => dispatch({ type: 'color' })} > Reset </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App"]},"metadata":{},"sourceType":"module"}