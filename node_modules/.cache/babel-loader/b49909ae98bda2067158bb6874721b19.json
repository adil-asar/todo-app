{"ast":null,"code":"var _jsxFileName = \"D:\\\\React-Pro\\\\filter\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'increment':\n      return { ...state,\n        count: state.count + 1\n      };\n\n    case 'decrement':\n      return state.count > 1 ? { ...state,\n        count: state.count - 1\n      } : { ...state,\n        count: state.count = 0\n      };\n\n    case 'userInput':\n      return { ...state,\n        input: action.payload\n      };\n\n    case 'mode_toggle':\n      return { ...state,\n        mode: !state.mode\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst App = () => {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, {\n    count: 0,\n    input: '',\n    mode: false\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `app ${state.mode ? 'color_change' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: state.input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"inp_css\",\n      placeholder: \"Enter name\",\n      value: state.input,\n      type: \"text\",\n      onChange: e => dispatch({\n        type: 'userInput',\n        payload: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: state.count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn_css\",\n      onClick: () => dispatch({\n        type: 'increment'\n      }),\n      children: \"Increase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn_css\",\n      onClick: () => dispatch({\n        type: 'decrement'\n      }),\n      children: \"Decrease\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn_css\",\n      onClick: () => dispatch({\n        type: 'mode_toggle'\n      }),\n      children: \"Change Mode\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"qT0/EbLZhVEbvnuYHKr3Fwo2To8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/React-Pro/filter/src/App.js"],"names":["React","useReducer","reducer","state","action","type","count","input","payload","mode","App","dispatch","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;;AAGA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,WAAL;AAAkB,aAAO,EAAE,GAAGF,KAAL;AAAYG,QAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,GAAc;AAAjC,OAAP;;AAClB,SAAK,WAAL;AAAkB,aAAOH,KAAK,CAACG,KAAN,GAAc,CAAd,GAAkB,EAAE,GAAGH,KAAL;AAAYG,QAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,GAAc;AAAjC,OAAlB,GAAyD,EAAE,GAAGH,KAAL;AAAYG,QAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,GAAc;AAAjC,OAAhE;;AAClB,SAAK,WAAL;AAAkB,aAAO,EAAE,GAAGH,KAAL;AAAYI,QAAAA,KAAK,EAAEH,MAAM,CAACI;AAA1B,OAAP;;AAClB,SAAK,aAAL;AAAoB,aAAO,EAAE,GAAGL,KAAL;AAAYM,QAAAA,IAAI,EAAE,CAACN,KAAK,CAACM;AAAzB,OAAP;;AAEpB;AAAS,aAAON,KAAP;AANX;AASD,CAVD;;AAaA,MAAMO,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAM,CAACP,KAAD,EAAQQ,QAAR,IAAoBV,UAAU,CAACC,OAAD,EAAU;AAAEI,IAAAA,KAAK,EAAE,CAAT;AAAYC,IAAAA,KAAK,EAAE,EAAnB;AAAuBE,IAAAA,IAAI,EAAE;AAA7B,GAAV,CAApC;AAGA,sBACE;AAAK,IAAA,SAAS,EAAG,OAAMN,KAAK,CAACM,IAAN,GAAa,cAAb,GAA8B,EAAG,EAAxD;AAAA,4BAEE;AAAA,gBAAKN,KAAK,CAACI;AAAX;AAAA;AAAA;AAAA;AAAA,YAFF,eAIE;AAAO,MAAA,SAAS,EAAC,SAAjB;AAA2B,MAAA,WAAW,EAAC,YAAvC;AAAoD,MAAA,KAAK,EAAEJ,KAAK,CAACI,KAAjE;AAAwE,MAAA,IAAI,EAAC,MAA7E;AACE,MAAA,QAAQ,EAAGK,CAAD,IAAOD,QAAQ,CAAC;AAAEN,QAAAA,IAAI,EAAE,WAAR;AAAqBG,QAAAA,OAAO,EAAEI,CAAC,CAACC,MAAF,CAASC;AAAvC,OAAD;AAD3B;AAAA;AAAA;AAAA;AAAA,YAJF,eAME;AAAA,gBAAKX,KAAK,CAACG;AAAX;AAAA;AAAA;AAAA;AAAA,YANF,eAQE;AACE,MAAA,SAAS,EAAC,SADZ;AAEE,MAAA,OAAO,EAAE,MAAMK,QAAQ,CAAC;AAAEN,QAAAA,IAAI,EAAE;AAAR,OAAD,CAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,eAcE;AACE,MAAA,SAAS,EAAC,SADZ;AAEE,MAAA,OAAO,EAAE,MAAMM,QAAQ,CAAC;AAAEN,QAAAA,IAAI,EAAE;AAAR,OAAD,CAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAdF,eAoBE;AACE,MAAA,SAAS,EAAC,SADZ;AAEE,MAAA,OAAO,EAAE,MAAMM,QAAQ,CAAC;AAAEN,QAAAA,IAAI,EAAE;AAAR,OAAD,CAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YApBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CAlCD;;GAAMK,G;;KAAAA,G;AAoCN,eAAeA,GAAf","sourcesContent":["import React, { useReducer } from 'react'\r\n\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'increment': return { ...state, count: state.count + 1 }\r\n    case 'decrement': return state.count > 1 ? { ...state, count: state.count - 1 } : { ...state, count: state.count = 0 }\r\n    case 'userInput': return { ...state, input: action.payload }\r\n    case 'mode_toggle': return { ...state, mode: !state.mode }\r\n\r\n    default: return state\r\n\r\n  }\r\n}\r\n\r\n\r\nconst App = () => {\r\n\r\n  const [state, dispatch] = useReducer(reducer, { count: 0, input: '', mode: false })\r\n\r\n\r\n  return (\r\n    <div className={`app ${state.mode ? 'color_change' : ''}`}>\r\n\r\n      <h1>{state.input}</h1>\r\n\r\n      <input className='inp_css' placeholder='Enter name' value={state.input} type='text'\r\n        onChange={(e) => dispatch({ type: 'userInput', payload: e.target.value })} />\r\n      <h1>{state.count}</h1>\r\n\r\n      <button\r\n        className='btn_css'\r\n        onClick={() => dispatch({ type: 'increment' })} >\r\n        Increase\r\n      </button>\r\n\r\n      <button\r\n        className='btn_css'\r\n        onClick={() => dispatch({ type: 'decrement' })} >\r\n        Decrease\r\n      </button>\r\n\r\n      <button\r\n        className='btn_css'\r\n        onClick={() => dispatch({ type: 'mode_toggle' })} >\r\n        Change Mode\r\n      </button>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App"]},"metadata":{},"sourceType":"module"}